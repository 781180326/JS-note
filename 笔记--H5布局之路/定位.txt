
	position：relative相对定位
	
	1、不影响元素本身的特性
	2、不使元素脱离文档流（文档移动后原始位置会被保留）	
	3、如果没有定位偏移量，对元素本身没有任何影响
	4、提升层级
	
	position：absolute 绝对定位
	
	1、使元素完全脱离文档流
	2、使内嵌（行间元素）支持宽高
	3、块属性标签内容撑开宽度
	4、提升层级（页面较上层，覆盖其他元素）
	5、如果有定位父级相对于定位父级发生偏移，没有定位父级相对于document发生偏移
	6、相对定位一般配合绝对定位使用

	position：fixed 固定定位
	
	与绝对定位特性基本一致，差别是始终相对于整个文档进行定位
	IE6不支持固定定位(一般用js模拟)

	position：static 没有定位，默认值
	

1、绝对定位 absolute 和 固定定位 fixed 的激活
	
	设置 position： absolute，还要指定 left、right、top、bottom中的至少一个属性，否则这些属性会使用默认值 auto， 此时该对象遵循正常的HTML布局规则，但依旧脱离文档流。
	
	如果只设置 left 或 right ， 仅激活水平方向上的绝对定位。
	如果只设置 top  或 bottom， 仅激活垂直方向上的绝对定位。
	
	注意，这里说的激活是指在视觉位置上与正常流不同。
	
2、left、right、top、bottom

	取值：
		可以是绝对单位 px
		可以是相对单位 百分比等
		可以取负值
		
3、同时设置两个相反方向的值

	①绝对定位元素存在固定宽高
		在水平方向上，不论先写left后写right，还是先写right后写left，均按照left值进行渲染；
		在竖直方向上，不论先写top后写bottom，还是先写bottom后写top，均按照top值进行渲染。
	
	②绝对定位元素不存在固定宽高
		合理的left与right 或 top与bottom 都绘生效，
			元素宽度 = 父级宽度 - left值 - right值
		如果元素宽度计算得到负值，会自动变为 0像素。
		
4、层级覆盖关系

	同级元素，后读取的元素会覆盖先读取的元素；
	定位元素默认的z-index值为0；
	z-index可以设置为负值，此时层叠顺序在HTML文档之后；
	
	针对两个设置绝对定位的元素进行层级比较时，首先比较其父级，再比较子级：
		当父级元素层级高，子级元素层级低时 -》 层叠在上面；
		当父级元素层级低，子级元素层级高时 -》 层叠在下面。
		
